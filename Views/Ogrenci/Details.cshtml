@model AskidaKitap.WebApp.Models.Ogrenci

@{
    ViewData["Title"] = "Öğrenci Detayı";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Öğrenci Detayı</h1>
        <div>
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning me-2">
                <i class="bi bi-pencil"></i> Düzenle
            </a>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Geri Dön
            </a>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.OgrenciNo)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.OgrenciNo)</dd>

                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Ad)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Ad)</dd>

                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Soyad)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Soyad)</dd>

                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Email)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Email)</dd>
            </dl>
        </div>
    </div>

    <div class="mt-4">
        <h3>Öğrencinin Aldığı ve İade Ettiği Kitaplar</h3>
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Kitap Adı</th>
                        <th>Yazar</th>
                        <th>Kategori</th>
                        <th>Alınma Tarihi</th>
                        <th>İade Tarihi</th>
                        <th class="text-end">İşlemler</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var kayit in Model.Kitaplar.OrderByDescending(k => k.AlinmaTarihi))
                    {
                        <tr>
                            <td>@kayit.Kitap.Ad</td>
                            <td>@kayit.Kitap.Yazar</td>
                            <td>@kayit.Kitap.KitapKategori.Ad</td>
                            <td>@kayit.AlinmaTarihi.ToString("dd.MM.yyyy")</td>
                            <td>
                                @if (kayit.IadeTarihi.HasValue)
                                {
                                    <span class="text-success">
                                        <i class="bi bi-check-circle-fill"></i> @kayit.IadeTarihi.Value.ToString("dd.MM.yyyy")
                                    </span>
                                }
                                else
                                {
                                    <span class="text-warning">
                                        <i class="bi bi-clock"></i> İade Bekliyor
                                    </span>
                                }
                            </td>
                            <td class="text-end">
                                @if (kayit.IadeTarihi == null)
                                {
                                    <button class="btn btn-warning btn-sm" onclick="kitapIade(@kayit.Id)">
                                        <i class="bi bi-arrow-return-left"></i> İade Al
                                    </button>
                                }
                                else
                                {
                                    <span class="badge bg-success">
                                        <i class="bi bi-check-circle"></i> İade Alındı
                                    </span>
                                }
                            </td>
                        </tr>
                    }
                    @if (!Model.Kitaplar.Any())
                    {
                        <tr>
                            <td colspan="6" class="text-center">Öğrencinin aldığı kitap bulunmuyor.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        async function kitapIade(kitapKimdeId) {
            if (!confirm('Kitabı iade almak istediğinize emin misiniz?')) {
                return;
            }

            try {
                const formData = new FormData();
                formData.append('kitapKimdeId', kitapKimdeId);

                const response = await fetch('/KitapDegisim/KitapIade', {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: formData
                });

                const result = await response.json();
                
                if (result.success) {
                    showAlert(result.message, 'success');
                    setTimeout(() => {
                        window.location.reload();
                    }, 1500);
                } else {
                    showAlert(result.message, 'danger');
                }
            } catch (error) {
                showAlert('Kitap iade işlemi sırasında bir hata oluştu.', 'danger');
            }
        }

        function showAlert(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;
            
            const container = document.querySelector('.container');
            container.insertBefore(alertDiv, container.firstChild);
            
            setTimeout(() => alertDiv.remove(), 5000);
        }
    </script>
} 